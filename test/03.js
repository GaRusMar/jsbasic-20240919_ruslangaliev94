// üìå –§–£–ù–ö–¶–ò–ò –ò –ú–ê–°–°–ò–í–´

// üîÅ –§—É–Ω–∫—Ü–∏—è ‚Äî —ç—Ç–æ —Å–ø–æ—Å–æ–± –ø–æ–≤—Ç–æ—Ä—è—Ç—å –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –¥–µ–π—Å—Ç–≤–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤—ã–≤–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–æ–Ω—Å–æ–ª—å

// üìç –ù–µ—Å–∫–æ–ª—å–∫–æ —Å–ø–æ—Å–æ–±–æ–≤ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏:

// --- Function Declaration (–û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏) ---
helloUser1(); // –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
helloUser1();
helloUser1();

function helloUser1() {
    console.log('Hello –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 1');
}

// ‚úÖ –ú–æ–∂–Ω–æ –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ –º–µ—Å—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –≤ –∫–æ–¥–µ
// –ø–æ—Ç–æ–º—É —á—Ç–æ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä ¬´–ø–æ–¥–Ω–∏–º–∞–µ—Ç¬ª —Ç–∞–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≤–≤–µ—Ä—Ö (hoisting)


// --- Function Expression (–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ) ---
let helloUser2 = function () {
    console.log('Hello –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 2');
};

helloUser2(); // ‚õî –ù–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è

// üìå –†–∞–∑–Ω–∏—Ü–∞:
// - Function Declaration ¬´–ø–æ–¥–Ω–∏–º–∞–µ—Ç—Å—è¬ª –≤–≤–µ—Ä—Ö
// - Function Expression ‚Äî –Ω–µ—Ç. –í—ã–∑—ã–≤–∞—Ç—å —Ä–∞–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ –Ω–µ–ª—å–∑—è.


// --- Arrow Function (–°—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è) ---
let helloUser3 = () => {
    console.log('Hello –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 3');
};

helloUser3();

// üîé –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å—Ç—Ä–µ–ª–æ—á–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:
// - –ù–µ–ª—å–∑—è –≤—ã–∑—ã–≤–∞—Ç—å –¥–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è
// - –ù–µ—Ç —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ (this)
// - –ù–µ–ª—å–∑—è –≤—ã–∑–≤–∞—Ç—å —á–µ—Ä–µ–∑ `new`
// - –ù–µ—Ç –æ–±—ä–µ–∫—Ç–∞ `arguments`
// - –ö–æ–Ω—Ç–µ–∫—Å—Ç –±–µ—Ä—ë—Ç—Å—è –∏–∑ –≤–Ω–µ—à–Ω–µ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
// - –£–¥–æ–±–Ω—ã –¥–ª—è –∫–æ—Ä–æ—Ç–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π –∏ –∫–æ–ª–±–µ–∫–æ–≤


// --- –í–æ–∑–≤—Ä–∞—Ç –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏ (return) ---
function sum() {
    if (5 > 2) {
        return 1 + 2; // –≤—ã—Ö–æ–¥ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏
    }
    console.log('sum:', 1 + 2); // –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è
}

let sumResult = sum();
console.log('sumResult:', sumResult); // 3


// üí° –í–∞–∂–Ω–æ! return —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å—Ç—Ä–æ–∫–∏
function test() {
    return // –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–¥–µ—Å—å!
    {
        a: 1
    }
}

let testResult = test();
console.log('testResult:', testResult); // undefined


// --- –ê—Ä–≥—É–º–µ–Ω—Ç—ã —Ñ—É–Ω–∫—Ü–∏–∏ ---
function sumNumbers(m, n) {
    return m + n;
}

console.log('sumNumbers:', sumNumbers(2, 3)); // 5

// –ê—Ä–≥—É–º–µ–Ω—Ç—ã –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é + –æ–±—ä–µ–∫—Ç `arguments`
function sumNumbers2(m, n = 0) {
    console.log('args[2]:', arguments[2]);      // –º–æ–∂–Ω–æ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º –ø–æ –∏–Ω–¥–µ–∫—Å—É
    console.log('args.length:', arguments.length);

    let result = 0;
    for (let i = 0; i < arguments.length; i++) {
        result += arguments[i];
    }

    return result;
}

console.log('sumNumbers2:', sumNumbers2(3, 2, 4, 5, 6)); // 20


// --- –û–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (Scope) ---
let a = 1;

function func1() {
    console.log('func1 a:', a); // –¥–æ—Å—Ç—É–ø –∫ –≤–Ω–µ—à–Ω–µ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π `a`

    let b = 2;

    let func2 = function () {
        let c = 3;
        console.log('func2 a:', a); // –≤–Ω–µ—à–Ω—è—è
        console.log('func2 b:', b); // –≤–Ω–µ—à–Ω—è—è –∏–∑ `func1`
        console.log('func2 c:', c); // –ª–æ–∫–∞–ª—å–Ω–∞—è
    }

    func2();
}

func1();

// ‚ùó –í–Ω–µ—à–Ω–∏–π –∫–æ–¥ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º, –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–º –≤–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏
// console.log('test', test); // ReferenceError: test is not defined

// ‚úÖ –í–Ω—É—Ç—Ä–∏ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –æ–±—ä—è–≤–ª—è—Ç—å –¥—Ä—É–≥–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ (–≤–ª–æ–∂–µ–Ω–Ω–æ—Å—Ç—å)


// —Ç–∞–∫ –∫–∞–∫ —Ñ—É–Ω–∫—Ü–∏—è —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º, —É –Ω–∞—Å –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –±—É–¥—É—Ç —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–≤–Ω—ã –¥—Ä—É–≥ –¥—Ä—É–≥—É, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –∏–Ω–¥–µ—Ç–∏—á–Ω—ã
console.log((function () {
}) === (function () {
})); //false


//–º–∞—Å—Å–∏–≤—ã []
// –º–∞—Å—Å–∏–≤ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–µ–ª—å–Ω—ã–º —Ç–∏–ø–æ–º –¥–∞–Ω–Ω—ã–º, —ç—Ç–æ –æ–±—ä–µ–∫—Ç
//–º–æ–∂–Ω–æ —Å–æ–∑–∞–ª–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—Ç–æ—Ä, –Ω–æ —á–∞—â–µ —Å–æ–∑–¥–∞—é—Ç –ª–∏—Ç–µ—Ä–∞–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–º


// —Ö—Ä–Ω–∞–∏—Ç—å –º–æ–∂–µ–º –≤—Å–µ —á—Ç–æ —É–≥–æ–¥–Ω–æ
let arr1 = [1, 2, 'test', {a: 3}];
console.log('arr1:', arr1);

// –º–æ–∂–Ω–æ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ –∏–Ω–¥—É–∫—Å—É –∫ —ç–ª–µ–º–µ–Ω—Ç—É –º–∞—Å—Å–∏–≤–∞(–≤ –æ–±—ä–µ–∫—Ç–µ —ç—Ç–æ –∫–ª—é—á), –∏–Ω–¥–µ–∫—Å—ã –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å 0

console.log('arr1[0]', arr1[0])
console.log('arr1[2]', arr1[2])


let arr2 = [1, 2, 3, [4, 5], 6, 7];
console.log('arr2[3][0]', arr2[3][0]) //4


1:03
